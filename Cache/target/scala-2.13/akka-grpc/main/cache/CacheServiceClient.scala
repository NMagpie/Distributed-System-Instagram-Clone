
// Generated by Akka gRPC. DO NOT EDIT.
package cache

import scala.concurrent.ExecutionContext

import akka.actor.ClassicActorSystemProvider

import akka.grpc.GrpcChannel
import akka.grpc.GrpcClientCloseException
import akka.grpc.GrpcClientSettings

import akka.grpc.scaladsl.AkkaGrpcClient

import akka.grpc.internal.NettyClientUtils

import akka.grpc.AkkaGrpcGenerated

import akka.grpc.scaladsl.SingleResponseRequestBuilder
import akka.grpc.internal.ScalaUnaryRequestBuilder

// Not sealed so users can extend to write their stubs
@AkkaGrpcGenerated
trait CacheServiceClient extends CacheService with CacheServiceClientPowerApi with AkkaGrpcClient

@AkkaGrpcGenerated
object CacheServiceClient {
  def apply(settings: GrpcClientSettings)(implicit sys: ClassicActorSystemProvider): CacheServiceClient =
    new DefaultCacheServiceClient(GrpcChannel(settings), isChannelOwned = true)
  def apply(channel: GrpcChannel)(implicit sys: ClassicActorSystemProvider): CacheServiceClient =
    new DefaultCacheServiceClient(channel, isChannelOwned = false)

  private class DefaultCacheServiceClient(channel: GrpcChannel, isChannelOwned: Boolean)(implicit sys: ClassicActorSystemProvider) extends CacheServiceClient {
    import CacheService.MethodDescriptors._

    private implicit val ex: ExecutionContext = sys.classicSystem.dispatcher
    private val settings = channel.settings
    private val options = NettyClientUtils.callOptions(settings)

    
    private def getRequestBuilder(channel: akka.grpc.internal.InternalChannel) =
    
      new ScalaUnaryRequestBuilder(getDescriptor, channel, options, settings)
    
    
    private def putRequestBuilder(channel: akka.grpc.internal.InternalChannel) =
    
      new ScalaUnaryRequestBuilder(putDescriptor, channel, options, settings)
    
    

    
    /**
     * Lower level "lifted" version of the method, giving access to request metadata etc.
     * prefer get(cache.Quarry) if possible.
     */
    
    override def get(): SingleResponseRequestBuilder[cache.Quarry, cache.QuarryResult] =
      getRequestBuilder(channel.internalChannel)
    

    /**
     * For access to method metadata use the parameterless version of get
     */
    def get(in: cache.Quarry): scala.concurrent.Future[cache.QuarryResult] =
      get().invoke(in)
    
    /**
     * Lower level "lifted" version of the method, giving access to request metadata etc.
     * prefer put(cache.Object) if possible.
     */
    
    override def put(): SingleResponseRequestBuilder[cache.Object, cache.PutResult] =
      putRequestBuilder(channel.internalChannel)
    

    /**
     * For access to method metadata use the parameterless version of put
     */
    def put(in: cache.Object): scala.concurrent.Future[cache.PutResult] =
      put().invoke(in)
    

    override def close(): scala.concurrent.Future[akka.Done] =
      if (isChannelOwned) channel.close()
      else throw new GrpcClientCloseException()

    override def closed: scala.concurrent.Future[akka.Done] = channel.closed()
  }
}

@AkkaGrpcGenerated
trait CacheServiceClientPowerApi {
  
  /**
   * Lower level "lifted" version of the method, giving access to request metadata etc.
   * prefer get(cache.Quarry) if possible.
   */
  
  def get(): SingleResponseRequestBuilder[cache.Quarry, cache.QuarryResult] = ???
  
  
  /**
   * Lower level "lifted" version of the method, giving access to request metadata etc.
   * prefer put(cache.Object) if possible.
   */
  
  def put(): SingleResponseRequestBuilder[cache.Object, cache.PutResult] = ???
  
  

}
