
// Generated by Akka gRPC. DO NOT EDIT.
package cache

import akka.annotation.ApiMayChange

import akka.grpc.AkkaGrpcGenerated


@AkkaGrpcGenerated
trait CacheService {
  
  
  def get(in: cache.Quarry): scala.concurrent.Future[cache.QuarryResult]
  
  
  def put(in: cache.Object): scala.concurrent.Future[cache.PutResult]
  
}



@AkkaGrpcGenerated
object CacheService extends akka.grpc.ServiceDescription {
  val name = "cache.CacheService"

  val descriptor: com.google.protobuf.Descriptors.FileDescriptor =
    cache.AuthProto.javaDescriptor;

  object Serializers {
    import akka.grpc.scaladsl.ScalapbProtobufSerializer
    
    val QuarrySerializer = new ScalapbProtobufSerializer(cache.Quarry.messageCompanion)
    
    val ObjectSerializer = new ScalapbProtobufSerializer(cache.Object.messageCompanion)
    
    val QuarryResultSerializer = new ScalapbProtobufSerializer(cache.QuarryResult.messageCompanion)
    
    val PutResultSerializer = new ScalapbProtobufSerializer(cache.PutResult.messageCompanion)
    
  }

  @ApiMayChange
  @AkkaGrpcGenerated
  object MethodDescriptors {
    import akka.grpc.internal.Marshaller
    import io.grpc.MethodDescriptor
    import Serializers._

    
    val getDescriptor: MethodDescriptor[cache.Quarry, cache.QuarryResult] =
      MethodDescriptor.newBuilder()
        .setType(
   MethodDescriptor.MethodType.UNARY 
  
  
  
)
        .setFullMethodName(MethodDescriptor.generateFullMethodName("cache.CacheService", "get"))
        .setRequestMarshaller(new Marshaller(QuarrySerializer))
        .setResponseMarshaller(new Marshaller(QuarryResultSerializer))
        .setSampledToLocalTracing(true)
        .build()
    
    val putDescriptor: MethodDescriptor[cache.Object, cache.PutResult] =
      MethodDescriptor.newBuilder()
        .setType(
   MethodDescriptor.MethodType.UNARY 
  
  
  
)
        .setFullMethodName(MethodDescriptor.generateFullMethodName("cache.CacheService", "put"))
        .setRequestMarshaller(new Marshaller(ObjectSerializer))
        .setResponseMarshaller(new Marshaller(PutResultSerializer))
        .setSampledToLocalTracing(true)
        .build()
    
  }
}
